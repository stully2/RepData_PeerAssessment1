mydata <- read.table("household_power_consumption.txt",header = TRUE,sep = ";"
, stringsAsFactors = FALSE)
mydata <- read.table("household_power_consumption.txt",header = TRUE,sep = ";"
, stringsAsFactors = FALSE)
str(mydata)
mydata[mydata == "?"] <- NA
mydata$Time <- paste(mydata$Date,mydata$Time,sep = " ")
mydata$Date <- as.Date(mydata$Date,"%d/%m/%Y")
mydata$Time <- strptime(mydata$Time,"%d/%m/%Y %H:%M:%S")
str(mydata)
for (i in 3:ncol(mydata)) {
mydata[,i] <- as.numeric(mydata[,i])
}
str(mydata)
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?trellis.par.set()
ggplot(movies, aes(votes, rating))
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
source('~/GitHub/RepData_PeerAssessment1/Rep_Data.r')
setdiff(pkgs,installed.packages())
originalWD <- getwd()
workingpath <- "\\RepData_PeerAssessment1"
setwd(paste(originalWD,workingpath,sep = ""))
source('~/GitHub/RepData_PeerAssessment1/Rep_Data.r')
source('~/GitHub/RepData_PeerAssessment1/Rep_Data.r')
q5data <- ddply(mydata, .(interval,daytype), summarize
, var_mean = round(mean(steps,na.rm = TRUE), 0))
xyplot(var_mean ~ interval | daytype,q5data)
xyplot(var_mean ~ interval | daytype,data = q5data, layout(2,1))
xyplot(var_mean ~ interval | daytype,data = q5data, layout= c(2,1))
xyplot(var_mean ~ interval | daytype,data = q5data, layout= c(1,2))
xyplot(var_mean ~ interval | daytype,data = q5data, layout= c(1,2), type = "l")
xyplot(var_mean ~ interval | daytype,data = q5data, layout= c(1,2), type = "l", ylab = "Number of Steps")
xyplot(var_mean ~ interval | daytype
,data = q5data
, layout= c(1,2)
, type = "l"
, ylab = "Number of Steps"
panel = function(x, y, ...) {
panel.xyplot(x,y,...)
panel.abline(x,y, col = 2)
}
)
xyplot(var_mean ~ interval | daytype
,data = q5data
, layout= c(1,2)
, type = "l"
, ylab = "Number of Steps"
panel = function(interval, var_mean, ...) {
panel.xyplot(interval,var_mean,...)
panel.abline(interval,var_mean, col = 2)
}
)
xyplot(var_mean ~ interval | daytype
,data = q5data
, layout= c(1,2)
, type = "l"
, ylab = "Number of Steps"
, panel = function(interval, var_mean, ...) {
panel.xyplot(interval,var_mean,...)
panel.abline(interval,var_mean, col = 2)
}
)
xyplot(var_mean ~ interval | daytype
, panel = function(interval, var_mean, ...) {
panel.xyplot(interval,var_mean,       ,data = q5data
, layout= c(1,2)
, type = "l"
, ylab = "Number of Steps")
panel.abline(interval,var_mean, col = 2)
}
)
xyplot(var_mean ~ interval | daytype
,data = q5data
, layout= c(1,2)
, type = "l"
, ylab = "Number of Steps"
)
q5data[which.max(q5data$var_mean),1]
